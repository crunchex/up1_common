#!/usr/bin/env python

import sys
import copy
import rospy
import moveit_commander
import moveit_msgs.msg
import geometry_msgs.msg

class Sequence():
    def __init__(self):
        print "============ Starting tutorial setup"
        moveit_commander.roscpp_initialize(sys.argv)

        rospy.init_node('up1_sequence', anonymous=True)

        robot = moveit_commander.RobotCommander()
        scene = moveit_commander.PlanningSceneInterface()
        group = moveit_commander.MoveGroupCommander("right_arm")

        display_trajectory_publisher = rospy.Publisher(
                '/move_group/display_planned_path',
                moveit_msgs.msg.DisplayTrajectory)

        print "============ Reference frame: %s" % group.get_planning_frame()
        print "============ Reference frame: %s" % group.get_end_effector_link()

        print "============ Robot Groups:"
        print robot.get_group_names()

        print "============ Printing robot state"
        print robot.get_current_state()
        print "============"

        print "============ Generating plan 1"
        pose_target = geometry_msgs.msg.Pose()
        pose_target.orientation.w = 1.0
        pose_target.position.x = 0.7
        pose_target.position.y = -0.05
        pose_target.position.z = 1.1
        group.set_pose_target(pose_target)

        plan1 = group.plan()

        print "============ Waiting while RVIZ displays plan1..."
        rospy.sleep(5)

        rospy.spin()

if __name__ == '__main__':
    sequence = Sequence()
